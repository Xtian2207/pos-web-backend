spring.application.name=pos-web-backend
spring.datasource.url=jdbc:postgresql://dpg-cvoma3buibrs73bu2ohg-a:5432/posdb_2pr8
spring.datasource.username=posuser
spring.datasource.password=K5wuhTpLZr5Hm48uSidCgq1J8zYz0oXI
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.main.allow-bean-definition-overriding=true

#Propiedades de JWT
app.jwt-secret=qYVG2R8iN0WaeRVFyWumrUW+Vp/tYBSkKf5E+mTlcyo=
app.jwt-expiration-milliseconds=86400000

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.messaging=DEBUG

#spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.bootstrap-servers=pkc-921jm.us-east-2.aws.confluent.cloud:9092
spring.kafka.admin.auto-create=false

spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="UZU5SY2EZZECN055" password="rfAiiyiosenhXEUyCvz3EhWj9w6s9bA2ioMeDe9S76W3/w7BabP3hgFfRgVkTkH9";

spring.kafka.producer.properties.sasl.jaas.config=${spring.kafka.properties.sasl.jaas.config}
spring.kafka.consumer.properties.sasl.jaas.config=${spring.kafka.properties.sasl.jaas.config}

spring.kafka.consumer.group-id=pos-notifications-group
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping=venta:com.tghtechnology.posweb.data.dto.VentaNotificationDTO

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=venta:com.tghtechnology.posweb.data.dto.VentaNotificationDTO
spring.kafka.producer.properties.spring.json.add.type.headers=true